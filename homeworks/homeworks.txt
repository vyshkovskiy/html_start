* Задача 1: 
Почитать про HTML - 
~ что это
~ зачем используется
~ где применяется
~ из чего состоит
~ с помощью чего его можно открыть (для редактирования) (например чтобы отредактировать картинку нужен фотошоп, а что нужно для HTML?)
~ c помощью чего его можно открыть (для отображения) (например, чтобы открыть картинку нужна программа просмотра картинок, а что нужно для HTML)
~ какая последняя версия
Написать ответы на все вопросы выше, + описать как ты понимаешь понятие «гипер разметка» (после того как прочтешь)

* Решение:
1.HTML- это язык гипертекстовой разметки, (это как бы текст, который содержит в себе много тегов зи-за чего и получается веб страница.(<это тег>) ) 
2.используется он для написания страниц.
3.применяется в браузере.
4.состоит он, как ранее говорилось из тегов
5.с помощью спец. редакторов "Eclipse, Komodo Edit и Bluefish", самый известный "Notepad++".
6.его можно открыть с помощью просмотра кода страницы.
7.последняя версия "5".

* Статус: Готово
*================================================*

* Задача 2: 
Создать HTML файл который будет выводить на экран текст “Hello World!”.
Требования: файл должен иметь минимальную HTML структуру.

* Решение:
Файл homeworks/hw2/Hello_World!.html

* Статус: Готово
*================================================*

* Задача 3:
Дать ответы на след вопросы:
~ Что такое тег?
~ Какие типы тегов есть?
~ Чем отличается строчный от блочного?
~ Примеры строчных
~ Примеры блочных
~ Можно ли ложить строчный элемент в блочный
~ А наоборот?
~ А блочный в блочный?
~ А строчный в строчный?
~ Что такое атрибуты
~ Зачем нужны атрибуты

* Решение:
1.Что такое тег?
Тег-это элемент языка разметки текста HTML.HTML-теги.
 ***Это специальные символы разметки языка HTML, позволяющие визуально оформлять содержимое веб-сайтов.
2.Какие типы тегов есть?
-теги верхнего уровня;
-теги заголовка документа;
-блочные элементы;
-строчные элементы;
-универсальные элементы;
-списки;
-таблицы;
-фреймы.
3.Чем отличается строчный от блочного?
строчные могут содержать в себе только даные или другие строчные элементы, а в блочные можно вложить другие блочные,строчные и даные.
Блочные элементы занимают всю доступную ширину, например, окна браузера, а ширина строчных элементов равна их содержимому плюс значения отступов, полей и границ.
4.Примеры строчных
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> вид текста изменяет таблица стилей, мы ее пока не учили
ещё с помощью строчного тега можно изменять вид текста
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
<a>-предназначен для создания сылок
<b>-определяет жирное начертание текста
с помощь <big> можно увеличить размер шрифта на 1-цу,а <small>-уменьшить
5.Примеры блочных
<blockquote>-с помощью его можно выделить длинную цитату
<p>-определяет параграф (абзац) текста
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> готово
хочу чтобы ты мне как то побольше рассказал о строчных и блочных тегах)))
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
6.Можно ли ложить строчный элемент в блочный
строчный в блочный, да
7.А наоборот?
нет
8.А блочный в блочный?
можно
9.А строчный в строчный?
можно
10.Что такое атрибуты,Зачем нужны атрибуты?
атрибуты сообщают браузеру, каким образом должен отображаться тот или иной элемент страницы.
атрибуты позволяют сделать более разнообразными внешний вид информации, добавляемой с помощью одинаковых тегов.

* Статус: Готово
*================================================*

* Задача 4:
Сделать html, который будет отображаться также как на скриншоте. + структура должна быть такая как задумана (разберись сам). Требование - структура HTML5

* Решение:
Файл homeworks/hw4/noobasiiiik.html

* Статус: Готово
*================================================*

* Задача 5:
- что такое кодировка 
- какие есть
- чем отличаются
- какая чаще всего используется
- установить Notepad++
- как узнать кодировку файла в Notepad++
- как поменять кодировку в Notepad++
- как преобразовать файл в другую кодировку в Notepad++
- установить Sublime text
- как узнать кодировку файла в Sublime text
- как поменять кодировку в Sublime text
- как преобразовать файл в другую кодировку в sublime text
- как указать кодировку в хтмл файле
- скинуть 2 и 4 задачи в нормальной кодировке (кодировка файла должна совпадать с кодировкой html-ля)

* Решение:
1.что такое кодировка
Кодировку HTML-страницы нужно указывать для того, чтобы веб-браузер мог правильно отображать текст на странице. Если браузер неправильно угадает кодировку, то вместо текста будут отображаться иероглифы.

Чтобы сообщить браузеру кодировку HTML-страницы, необходимо внутри тега <head> использовать тег:

<meta charset="имя кодировки">
Самая распространённая современная кодировка — utf-8. Используйте её во всех своих проектах.

Для кириллицы в Windows charset часто задавали как windows-1251. Но сейчас это считается плохой практикой.
</head>
2.Какие виды (типы) кодировок есть?
Есть "однобайтовые кодировки" и "многобайтные кодировки".
Однобайтные:
ASCII-кодировка создана для латинского алфавита, цифры и основные знаки пунктуации.
КОИ8-является сейчас одной из кодировок, которые обязательно должна поддерживать любая русская web-страница.
Windows-1251- Вторая по значению в русском Интернете (и, безусловно, первая по употребимости на персональных компьютерах) кодировка — это стандартная кириллическая кодировка Microsoft Windows. Все Windows- приложения, работающие с русским языком, обязаны понимать эту кодировку без перевода. 
Семейство 8859. Latin-1.-расширяющих таблицу ASCII для латинских букв с диакритикой и лигатур (кодировка ISO 8859-1), кириллицы (ISO 8859-5), арабского (ISO 8859-6), греческого (ISO 8859-7), и других алфавитов.
Многобайтные: 
Unicode или же UTF-8-Эта «производная» кодировка пользуется для записи символов цепочками байтов различной длины (от одного до шести), которые с помощью несложного алгоритма преобразуются в Unicode- коды.
Для указания кодировки символов web-страницы используются следующие обозначения кодовых таблиц:

windows-1251 - кириллица Windows
KOI8-R - Виды кодировок символов КОИ8 для русского языка
KOI8-U - кодировка КОИ8 для украинского языка
ISO 8859-1 - кодировка Latin-1
ISO 8859-5 - кодировка семейства ISO 8859 для символов кирилицы
UTF-8 - Unicode - стандарт для HTML.
3. Чем отличаются?
Отличаются тем что однобайтные разделялись на какие то под группы не понятные в которых можно было вписывать только 128 символов, а у многобайтных есть специально созданный для HTML "UNICODE or UTF-8".
4. Какая чаще всего используется?
Чаще всего используется UTF-8 (Unicode).
5.Как поменять кодировку файла в Notepad++?
В панеле где написано "Кодировки")))
6.как узнать кодировку файла в Notepad++?
В нижнем правом углу написана кодировка)
7.как преобразовать файл в другую кодировку в Notepad++?
(Не понял вопроса) указать её в "<meta charset="....">"
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Кодировка - это то как закодирован файл. А в блоке "<meta charset="....">" ты указывает как ты его закодировал, чтобы тот, кто читает твой файл знал при помощи чего его нужно раскодировать. Представь, что мы с тобой договорились, что будем шифровать наши сообщения и придумали шифр. Время прошло и придумали еще один новый шифр. Но тут стал вопрос, если ты захочешь отправить письмо используя старый шифр, откуда я узнаю, что ты использовал старый шифр? Так и был придуман тег "<meta charset="....">" - он показывает какая кодировка в файле, НО это не означает, что там действительно такая кодировка. Представить что ты закодировал текст используя старый шифр, но случайно написал, что расшифровать при помощи нового. Тут точно также - есть кодировка самого файла - её ты можешь выбрать в текстовом редакторе (вопрос 5), а для преобразования текста в другую кодировку (ты мне зашифровал текст при помощи старого шифра, а потом решаешь переписать на новый) есть также в редакторе "Преобразовать в кодировку ..." или что-то такое. Поищи.
Итого: 
- когда ты выбираешь кодировку файла в редакторе - ты говоришь редактору "расшифруй ка этот текст при помощи вот такого шифровщика"
- когда ты пишешь тег "<meta charset="....">" в HTML документе - ты говоришь всем кто будет открывать этот файл "не нужно угадывать, какой шифровщик я использовал - я сам скажу, это UTF-8"
- когда ты перекодируешь файл (например из UTF-8 в Windows-1251) - текстовый редактор расшифровует весь файл из UTF-8 и зашифровывает в Windows-1251. Но, если ты указывал тег "<meta charset="....">", то тебе нужно поменять там кодировку, потому что она уже не UTF-8 а Windows-1251

++++++ Не ответил на вопросы:
- как поменять кодировку в Notepad++
- как преобразовать файл в другую кодировку в Notepad++
- установить Sublime text
- как узнать кодировку файла в Sublime text
- как поменять кодировку в Sublime text
- как преобразовать файл в другую кодировку в sublime text
- как указать кодировку в хтмл файле
- скинуть 2 и 4 задачи в нормальной кодировке (кодировка файла должна совпадать с кодировкой html-ля)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
* Статус: В доработке
*================================================*

* Задача 6: 
Ответить на вопросы:
- что такое css
- зачем применяется
- пример (как записать)
- какие есть параметры
- есть 3 варианта записи css , какие?
- в каком порядке будет выставлен приоритет для троих вариантов (если записать разные параметры, при помощи всех троих вариантов, какой в результате сработает)?
- Что такое айди тега?
Что такое класс тега?
- каким параметром указать: ширину? Высоту? Размер текста? Цвет. Екста? Фон? Обводку? Цвет обводки? Сделать текст жирным?

* Решение:
1.Что такое css?
формальный язык описания внешнего вида документа, написанного с использованием языка разметки.

2.зачем применяется?
CSS используется создателями веб-страниц для задания цветов, шрифтов, расположения отдельных блоков и других аспектов представления внешнего вида этих веб-страниц.

3.пример (как записать)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<!DOCTYPE html>
<html>
   <head>
      .....
     <link rel="stylesheet" type="text/css" href="style.css">
   </head>
   <body>
      .....
   </body>
</html>      ТЕПЕРЬВСЕ ЗРОЗУМЕЛО!!!)))

Это пример HTML, задача - пример CSS
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

4.какие есть параметры?
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
в смысле параметры?

Например width
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

5.есть 3 варианта записи css , какие?
Вариант 1 — Глобальный CSS
Глобальный CSS помещается в контейнер <head> конкретной страницы. При таком варианте подключения классы и идентификаторы (ID) могут быть использованы для обращения к CSS коду, однако, они будут активны только на этой конкретной странице. CSS стили подключенные таким путем загружаются при каждой повторной загрузке страницы, поэтому они могут повлиять на скорость ее загрузки. Тем не менее, существует несколько ситуаций в которых использование глобальных CSS может быть полезно. К примеру, если вам необходимо отправить кому-нибудь шаблон страницы – вам гораздо проще будет предоставить предварительный результат, если все будет на одной странице. Глобальные CSS помещаются между тегами <style></style>. Вот пример глобальной таблицы стилей:

Преимущества глобальных CSS:

Таблица стилей влияет только на одну страницу.
В глобальной CSS могут быть использованы классы и идентификаторы (ID).
Нет необходимости загружать несколько файлов. HTML и CSS могут быть в одном и том же файле.

Недостатки глобальных CSS:

Увеличенное время загрузки страницы.
Подключается только к одной странице – неэффективно, если вы хотите использовать одну и ту же CSS для нескольких страниц.

Вариант 2 — Внешний CSS
Возможно самый удобный вариант для подключения CSS к вашему сайту, это его привязка к внешнему .css файлу. В этом случае все изменения сделанные во внешнем CSS файле, будут в целом отражаться на вашем сайте. Ссылка на внешний CSS файл помещается в контейнер <head> страницы:

Преимущества внешних CSS:

Меньший размер страницы HTML и более чистая структура файла.
Быстрая скорость загрузки.
Для разных страниц может быть использован один и тот же .css файл.

Недостатки внешних CSS:

Страница может некорректно отображаться до полной загрузки внешнего CSS.

Вариант 3 — Внутренний CSS
Внутренний CSS используется для конкретного тега HTML. Атрибут <style> используется для настройки этого тега. Этот вариант подключения CSS не является рекомендованным, так как в этом случае необходимо настраивать каждый тег HTML по отдельности. К тому же управление вашим сайтом может стать довольно трудным, если вы будете использовать только внутренний CSS. Однако в некоторых случаях этот способ может быть весьма полезным. К примеру, в случае если у вас нет доступа к CSS файлам, или вам необходимо применить правила только для одного элемента. Пример HTML страницы с внутренним CSS должен выглядеть так:

Преимущества внутреннего CSS:

Полезен для проверки и предпросмотра изменений.
Полезен для быстрых исправлений.
Меньше HTTP запросов.

Недостатки внутреннего CSS:

Внутренние CSS должны быть применены для каждого элемента в отдельности.


БОЛЕЕ ЛУЧШИЙ ДЛЯ ЗАПИСИ БУДЕТ ВНЕШНИЙ.

6.Что такое айди тега?
Атрибут id определяет уникальный идентификатор HTML элемента (его значение должно быть уникально для всего HTML документа).

Чаще всего атрибут id используется в качестве селектора для определения стиля элемента в каскадной таблице стилей (CSS).
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
Что можно сделать с id чего нельзя сделать с class?
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
7.Что такое класс тега?
Атрибут class определяет один или несколько имен классов для HTML элемента.

В основном атрибут class используется для указания на класс в каскадной таблице стилей.
Одно или несколько имен классов. Чтобы присвоить несколько классов, необходимо эти имена классов разделять пробелом, например, <span class="left important">. Это позволяет одному HTML элементу присвоить несколько CSS классов.

Имя класса:

должно начинаться с латинской буквы A-Z или a-z
за которой может следовать: латинские буквы (A-Za-z), цифры (0-9), дефис ("-") и символ подчеркивания ("_")
в HTML все значения регистронезависимы.

8.каким параметром указать: ширину? Высоту? Размер текста? Цвет. Екста? Фон? Обводку? Цвет обводки? Сделать текст жирный?
Размер шрифта: font-size
фон: background
цвет текста: color
рамка: border
цвет рамки: border color
жирный текст: font-weight
ширина и высота:
max-height	Устанавливает максимальную высоту элемента.
max-width	Устанавливает максимальную ширину элемента
min-height	Устанавливает минимальную высоту элемента
min-width	Устанавливает минимальную ширину элемента

* Статус: В доработке
*================================================*

* Задача 7: 
Сделать html такой же как на картике.

* Решение:
homeworks/hw7/kubiki.html

* Статус: Готово
*================================================*

* Задача 8: 
Посмотреть видео https://youtu.be/5pBcKKiZSGE, повторить все за Хауди. Сделать все за один присест (сел, смотришь видео, сразу повторяешь за ним)

* Решение:
Решение в файле  homeworks/hw8/dr.dre.html 

* Статус: Новая
*================================================*

Задача 9:
Актуализировать git:
- Добавить файлы для 2 и 4 домашки в папки `homeworks/hw2` и `homeworks/hw4` соответсвенно
- Обновить описание для 2, 4 и 7 домашки (написать решение в файле homeworks/hw2/***.html)
- Обновить README.md - удалить 
"Тестовая запись
Тестовая запись 2
Тестовая запись 3"
- Удалить файл test.html

* Сатус: готово к проверке
*================================================*

Задача 10:
1. Почитать про формы HTML.
2. Ответить на вопросы:
- Что такое форма?
Элемент <form>
<form> является блочным элементом, который определяет интерактивную часть веб-страницы. Как результат, все элементы управления (такие как <input>, <textarea> или <button>) должны находиться внутри элемента <form>.

Два атрибута HTML необходимы:

action содержит адрес, который определяет, куда будет отправлена информация формы;
method может быть либо GET, либо POST и определяет, как будет отправлена информация формы.
Как правило, информация формы посылается на сервер. Как эти данные затем будут обработаны выходит за рамки данного руководства.

Подумайте о форме как о наборе элементов управления, которые работают вместе, чтобы выполнить одну операцию. Если вы написали форму входа на сайт, у вас могло быть три поля:

поле для электронной почты <input type="email">
поле для пароля <input type="password">
кнопка отправки <input type="submit">
Эти три элемента HTML будут заключены внутри одной формы <form action="/login" method="POST">.

Вы можете аналогично добавить форму регистрации на той же HTML-странице, в отдельном элементе <form>.

- Из чего состоит форма?
Два атрибута HTML необходимы:

action содержит адрес, который определяет, куда будет отправлена информация формы;
method может быть либо GET, либо POST и определяет, как будет отправлена информация формы.

- Какие есть поля?
Имя, возраст, имэйл, сайт

- Описать каждое поле (например, input - это ..., select - это ..., textarea - это ..., и дальше по списку)
Атрибут novalidate
Отменяет встроенную проверку данных введенных пользователем в форме на корректность.

Тег <button>
Создает на веб-странице кнопку.

Тег <fieldset>
Предназначен для группирования элементов формы.

Тег <form>
Устанавливает форму на веб-странице.

Тег <input>
Позволяет создавать разные элементы интерфейса.

Тег <keygen>
Используется для генерации пары ключей — закрытого и открытого.

Тег <label>
Устанавливает связь между определенной меткой и элементом формы.

Тег <legend>
Создает заголовок группы элементов формы.

Тег <optgroup>
Группирует элементы списка.

Тег <option>
Определяет отдельные пункты списка, создаваемого с помощью контейнера select

Тег <output>
Определяет область для вывода, преимущественно с помощью скриптов.

Тег <select>
Создает раскрывающийся список.

Тег <textarea>
Создает поле для многострочного текста.

- Что такое сабмит тип?
это кнопка отправки, если ее нет можно использовать ентер.


- Что такое action формы?
Кнопка отправки с <button>
Как и с:

<button type="submit">(html content)</button>
IE6 отправит весь текст для этой кнопки между тегами, другие браузеры будут отправлять только значение. Использование <button> дает вам больше свободы компоновки над дизайном кнопки. Во всех его намерениях и целях это казалось превосходным сначала, но различные причуды браузера затрудняют использование в разы.

В вашем примере IE6 отправит text на сервер, в то время как большинство других браузеров ничего не отправят. Чтобы сделать его совместимым с кросс-браузером, используйте <button type="submit" value="text">text</button>. Еще лучше: не используйте значение, потому что, если вы добавляете HTML, становится довольно сложным то, что получено на стороне сервера. Вместо этого, если вы должны отправить дополнительное значение, используйте скрытое поле.

Кнопка с <input>
Как и с:

<input type="button" />
По умолчанию это почти ничего не делает. Он даже не отправит вашу форму. Вы можете размещать только текст на кнопке и придать ему размер и границу с помощью CSS. Его первоначальным (и текущим) намерением было выполнение script без необходимости отправки формы на сервер.


 
Обычная кнопка отправки с <input>
Как и с:

<input type="submit" />
Как и предыдущий, но фактически представляет окружающую форму.

Кнопка отправки изображения с помощью <input>
Как и с:

<input type="image" />
Как и предыдущий (submit), он также отправит форму, но вы можете использовать любое изображение. Раньше это был предпочтительный способ использования изображений в качестве кнопок, когда форма должна была подаваться. Для большего контроля теперь используется <button>. Это также можно использовать для карт изображений на стороне сервера, но в наши дни это редкость. Когда вы используете атрибут usemap и (с или без этого атрибута), браузер отправляет координаты мыши/указателя X/Y на сервер (точнее, местоположение указателя мыши внутри кнопки момента нажатия Это). Если вы просто игнорируете эти дополнительные функции, это не что иное, как кнопка отправки, замаскированная под изображение.

Существуют некоторые тонкие различия между браузерами, но все будут отправлять атрибут value, за исключением тега <button>, как описано выше.

  
С помощью <button> вы можете использовать теги img и т.д.

<button type='submit'> text -- can be img etc.  </button>

с типом <input>, вы ограничены текстом  

- Какие есть методы сабмита формы? Чем они отличаются?


- Что такое placeholder?
Текстовые поля могут отображать подсказывающий текст, который исчезнет, как только будет введён некоторый текст.

<input type="text" placeholder="Введите своё имя">

Если вы начинаете набирать что-то, то увидите как текст «Введите своё имя» исчезнет.

* Решение:

* Сатус: Новая
*================================================*

Задача 11:
Создать форму у которой будут следующие поля:
text - Имя
text - Имя
textarea - О себе
email - Имейл
select - Пол (муж/жен)
checkbox - Образование (школа, универ (бакалавр), универ (магистр))
submit - Отправить данные

Сделать две одинаковые формы - одна методом POST, вторая GET

* Решение:

* Сатус: Новая
*================================================*

Задача 12:
Почитать про списки HTML.
Ответить на вопросы:
- Какие есть виды списков?
- Из чего состоит список?
- Как можно отсортировать список?
- Как добавить нумерацию списку?
- Написать пронумерованый список фамилий (рандомных)

* Решение:

* Сатус: Новая
*================================================*